   // Take the last chart from the first run with endReached = false
   // (so at least one run gets endReached = true each time) 

   /* Get chart run ideas
   Example existing chart: {chart1: 5, chart2: 10, chart3: 15...}
   ChartRun[] chartRuns: arrays of charts composing separate chart runs.
   boolean chartRunsCalculated: Used to know when to display chart run.
   Initially: chartRunsCalculated = false, chartRuns = [{run: [...], endReached: false}]
   Recursion complete when endReached for each run in ChartRuns == true.
   findCharts(chart: Chart, length: number) {
     this.chartService.getNextCharts(chart.name, length).subscribe((res: Chart[]) => {
      resIndex = 0;
      while (resIndex < res.length) {
        chartName = res[resIndex].name
        // It'll always be the first one to compare numerous ones.
        run = chartRuns.find(chartRun => chartRun.run[0] == chartName);
        if (run) {
          chart.run.add(run.run);
          resIndex += run.run.length;
          delete run;
        }
        else {
          chart.endReached = true;
        }
      }
      chartToFind = chartRuns.findOne(run => !run.endReached)
      if (!chartToFind) {
        return of();
      }
      return findCharts(chartToFind, remainingRuns.length + 1)
     })
   }*/